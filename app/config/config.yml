imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        name:        "PHPSESSID_API"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: 5.6
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        entity_managers:
            default:
                mappings:
                    App: ~
        # auto_generate_proxy_classes: "%kernel.debug%"
        # naming_strategy: doctrine.orm.naming_strategy.underscore
        # auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_rest:
    format_listener:
        rules:
            - { path: '^/api/v1', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/', priorities: [ 'text/html', 'application/json', '*/*'], fallback_format: html, prefer_extension: false, stop: true }
    view:
        view_response_listener: true
    serializer:
        serialize_null: true


sensio_framework_extra:
    view:
        annotations: false

nelmio_api_doc:
    name:                 'API documentation'
    exclude_sections:     []
    default_sections_opened:  true
    motd:
        template:             'App::api/motd.html.twig'
    request_listener:
        enabled:              true
        parameter:            _doc
    swagger:
        api_base_path:        /api/
        swagger_version:      '1.2'
        api_version:          '0.1'
        info:
            title:                Symfony3
            description:          'My awesome Symfony3 API!'
            TermsOfServiceUrl:    null
            contact:              null
            license:              null
            licenseUrl:           null
    cache:
        enabled:              false
        file:                 '%kernel.cache_dir%/api-doc.cache'
    sandbox:
        authentication:
            name: X-AUTH-TOKEN
            delivery: header
            custom_endpoint: false
        enabled:  true
        accept_type: application/json
        body_format:
            formats: [ form, json ]
            default_format: form
        request_format:
            formats:
                json: application/json
                xml: application/xml
            method: format_param
            default_format: json
        entity_to_choice: false

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/':
            origin_regex: true
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE','OPTIONS']
            max_age: 3600
            hosts: ['^.*'] #Supposed to be http://localhost:3000 but I can't make a regex that works
assetic:
    debug:          "%kernel.debug%"
    use_controller: '%kernel.debug%'
    # bundles:        [ ]

    filters:
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'
        jsqueeze: ~

    assets:
        roboto-bold-ttf:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Bold.ttf'
            output: 'fonts/roboto/Roboto-Bold.ttf'
        roboto-bold-woff:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Bold.woff'
            output: 'fonts/roboto/Roboto-Bold.woff'
        roboto-bold-woff2:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Bold.woff2'
            output: 'fonts/roboto/Roboto-Bold.woff2'
        roboto-light-ttf:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Light.ttf'
            output: 'fonts/roboto/Roboto-Light.ttf'
        roboto-light-woff:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Light.woff'
            output: 'fonts/roboto/Roboto-Light.woff'
        roboto-light-woff2:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Light.woff2'
            output: 'fonts/roboto/Roboto-Light.woff2'
        roboto-medium-ttf:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Medium.ttf'
            output: 'fonts/roboto/Roboto-Medium.ttf'
        roboto-medium-woff:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Medium.woff'
            output: 'fonts/roboto/Roboto-Medium.woff'
        roboto-medium-woff2:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Medium.woff2'
            output: 'fonts/roboto/Roboto-Medium.woff2'
        roboto-regular-ttf:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Regular.ttf'
            output: 'fonts/roboto/Roboto-Regular.ttf'
        roboto-regular-woff:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Regular.woff'
            output: 'fonts/roboto/Roboto-Regular.woff'
        roboto-regular-woff2:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Regular.woff2'
            output: 'fonts/roboto/Roboto-Regular.woff2'
        roboto-thin-ttf:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Thin.ttf'
            output: 'fonts/roboto/Roboto-Thin.ttf'
        roboto-thin-woff:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Thin.woff'
            output: 'fonts/roboto/Roboto-Thin.woff'
        roboto-thin-woff2:
            inputs: '%kernel.root_dir%/../web/assets/vendor/materialize-src/fonts/roboto/Roboto-Thin.woff2'
            output: 'fonts/roboto/Roboto-Thin.woff2'
